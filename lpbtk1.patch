From 47b03be46582486313537e828d38f1878133b56c Mon Sep 17 00:00:00 2001
From: nebkat <nebkat@gmail.com>
Date: Tue, 27 Dec 2011 17:40:39 +0000
Subject: [PATCH] Kill App on Long-Press Back Key (framework)

---
 core/java/android/provider/Settings.java           |    6 ++++
 .../internal/policy/impl/PhoneWindowManager.java   |   37 ++++++++++++++++++++
 2 files changed, 43 insertions(+)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 1e08c63..6b6edcc 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -4017,6 +4017,12 @@ public static final String getBluetoothInputDevicePriorityKey(String address) {
         public static final String ANR_SHOW_BACKGROUND = "anr_show_background";
 
         /**
+         * Whether to allow killing of the foreground app by long-pressing the Back button
+         * @hide
+         */
+        public static final String KILL_APP_LONGPRESS_BACK = "kill_app_longpress_back";
+
+        /**
          * The {@link ComponentName} string of the service to be used as the voice recognition
          * service.
          *
diff --git a/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java b/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
index 25da642..a1b6209 100755
--- a/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
+++ b/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
@@ -17,6 +17,8 @@
 
 import android.app.ActivityManager;
 import android.app.ActivityManagerNative;
+import android.app.ActivityManager.RunningAppProcessInfo;
+import android.app.IActivityManager;
 import android.app.IUiModeManager;
 import android.app.ProgressDialog;
 import android.app.SearchManager;
@@ -50,6 +52,7 @@
 import android.os.Message;
 import android.os.Messenger;
 import android.os.PowerManager;
+import android.os.Process;
 import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.SystemClock;
@@ -145,6 +148,8 @@
 import java.io.FileReader;
 import java.io.IOException;
 import java.io.PrintWriter;
+import java.util.ArrayList;
+import java.util.List;
 
 /**
  * WindowManagerPolicy implementation for the Android phone UI.  This
@@ -759,6 +764,28 @@ public void run() {
         }
     };
 
+    Runnable mBackLongPress = new Runnable() {
+        public void run() {
+            try {
+                IActivityManager mgr = ActivityManagerNative.getDefault();
+                List<RunningAppProcessInfo> apps = mgr.getRunningAppProcesses();
+                for (RunningAppProcessInfo appInfo : apps) {
+                    int uid = appInfo.uid;
+                    // Make sure it's a foreground user application (not system,
+                    // root, phone, etc.)
+                    if (uid >= Process.FIRST_APPLICATION_UID && uid <= Process.LAST_APPLICATION_UID
+                            && appInfo.importance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
+                        // Kill the entire pid
+                        Process.killProcess(appInfo.pid);
+                        break;
+                    }
+                }
+            } catch (RemoteException remoteException) {
+                // Do nothing; just let it go.
+            }
+        }
+    };
+
     void showGlobalActionsDialog() {
         if (mGlobalActions == null) {
             mGlobalActions = new GlobalActions(mContext, mWindowManagerFuncs);
@@ -1754,6 +1781,10 @@ public long interceptKeyBeforeDispatching(WindowState win, KeyEvent event, int p
             }
         }
 
+        if (keyCode == KeyEvent.KEYCODE_BACK && !down) {
+            mHandler.removeCallbacks(mBackLongPress);
+        }
+
         // First we always handle the home key here, so applications
         // can never break it, although if keyguard is on, we do let
         // it handle it, because that gives us the correct 5 second
@@ -1900,6 +1931,12 @@ public long interceptKeyBeforeDispatching(WindowState win, KeyEvent event, int p
                          launchAssistLongPressAction();
                     }
                 }
+            } else if (keyCode == KeyEvent.KEYCODE_BACK) {
+            	if (Settings.Secure.getInt(mContext.getContentResolver(),
+                    Settings.Secure.KILL_APP_LONGPRESS_BACK, 0) == 1) {
+                	if (down && repeatCount == 0) {
+                    		mHandler.postDelayed(mBackLongPress, 2000);
+                }
             } else {
                 if (mAssistKeyLongPressed) {
                     mAssistKeyLongPressed = false;
-- 
1.7.10

